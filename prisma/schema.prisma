generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  member
}

enum TaskStatus {
  pending
  inProgress
  completed
}

enum TaskPriority {
  high
  medium
  low
}

model Users {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String

  role UserRole @default(member)

  createdAt    DateTime       @default(now()) @map("created_at")
  updateAt     DateTime?      @default(now()) @map("updated_at")
  TeamsMembers TeamsMembers[]
  Tasks        Tasks[]
  TaskHistory  TaskHistory[]

  @@map("users")
}

model Teams {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  createdAt    DateTime       @default(now()) @map("created_at")
  updateAt     DateTime?      @default(now()) @map("updated_at")
  TeamsMembers TeamsMembers[]
  Tasks        Tasks[]

  @@map("teams")
}

model TeamsMembers {
  id     Int @id @default(autoincrement())
  userId Int @map("user_id")
  teamId Int @map("team_id")

  users Users @relation(fields: [userId], references: [id])
  teams Teams @relation(fields: [teamId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")

  @@map("team_members")
}

model Tasks {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  status      TaskStatus
  priority    TaskPriority
  assignedTo  Int          @map("assigned_to")
  teamId      Int          @map("team_id")

  users Users @relation(fields: [assignedTo], references: [id])
  teams Teams @relation(fields: [teamId], references: [id])

  createdAt   DateTime      @default(now()) @map("created_at")
  updateAt    DateTime?     @default(now()) @map("updated_at")
  TaskHistory TaskHistory[]

  @@map("tasks")
}

model TaskHistory {
  id        Int        @id @default(autoincrement())
  taskId    Int        @map("task_id")
  changedBy Int        @map("changed_by")
  oldStatus TaskStatus @map("old_status")
  newStatus TaskStatus @map("new_status")

  tasks Tasks @relation(fields: [taskId], references: [id])
  users Users @relation(fields: [changedBy], references: [id])

  changedAt DateTime @default(now()) @map("created_at")
}
